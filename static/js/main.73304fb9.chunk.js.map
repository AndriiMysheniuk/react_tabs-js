{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","useState","localSelectedTabId","setLocalSelectedTabId","findTab","find","tab","id","some","className","title","map","classnames","href","onClick","handleTabClick","content","App","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"8NAGaA,EAAO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAC1C,EAAoDC,mBAASF,GAA7D,mBAAOG,EAAP,KAA2BC,EAA3B,KACMC,EAAUN,EAAKO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAuBJ,EAAK,GAaxE,OAJKA,EAAKU,MAAK,SAAAF,GAAG,OAAIA,EAAIC,KAAOL,MAC/BC,EAAsBL,EAAK,GAAGS,IAI9B,sBAAKE,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBL,EAAQM,SAE9B,sBAAK,UAAQ,gBAAb,UACE,qBAAKD,UAAU,gBAAf,SACE,6BACGX,EAAKa,KAAI,SAAAL,GAAG,OACX,oBAEE,UAAQ,MACRG,UAAWG,IACT,CAAE,YAAaN,EAAIC,KAAOL,IAJ9B,SAOE,mBACEW,KAAI,WAAMP,EAAIC,IACd,UAAQ,UACRO,QAAS,kBA9BF,SAACR,GAClBA,EAAIC,KAAOL,IACbC,EAAsBG,EAAIC,IAC1BP,EAAcM,IA2BaS,CAAeT,IAHhC,SAKGA,EAAII,SAXFJ,EAAIC,WAiBjB,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGL,EAAQY,iBCxCNlB,EAAO,CAClB,CAAES,GAAI,QAASG,MAAO,QAASM,QAAS,eACxC,CAAET,GAAI,QAASG,MAAO,QAASM,QAAS,eACxC,CAAET,GAAI,QAASG,MAAO,QAASM,QAAS,gBAG7BC,EAAM,WACjB,MAA0ChB,mBAASH,EAAK,GAAGS,IAA3D,mBAAOR,EAAP,KAAsBmB,EAAtB,KAMA,OACE,cAAC,EAAD,CACEpB,KAAMA,EACNC,cAAeA,EACfC,cARsB,SAACM,GACzBY,EAAiBZ,EAAIC,QCbzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.73304fb9.chunk.js","sourcesContent":["import { useState } from 'react';\nimport classnames from 'classnames';\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }) => {\n  const [localSelectedTabId, setLocalSelectedTabId] = useState(selectedTabId);\n  const findTab = tabs.find(tab => tab.id === localSelectedTabId) || tabs[0];\n\n  const handleTabClick = (tab) => {\n    if (tab.id !== localSelectedTabId) {\n      setLocalSelectedTabId(tab.id);\n      onTabSelected(tab);\n    }\n  };\n\n  if (!tabs.some(tab => tab.id === localSelectedTabId)) {\n    setLocalSelectedTabId(tabs[0].id);\n  }\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${findTab.title}`}\n      </h1>\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <li\n                key={tab.id}\n                data-cy=\"Tab\"\n                className={classnames(\n                  { 'is-active': tab.id === localSelectedTabId },\n                )}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleTabClick(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"block\" data-cy=\"TabContent\">\n          {findTab.content}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const handleTabSelected = (tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <Tabs\n      tabs={tabs}\n      selectedTabId={selectedTabId}\n      onTabSelected={handleTabSelected}\n    />\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}